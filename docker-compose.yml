version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: pgbun_test
      POSTGRES_USER: pgbun_user
      POSTGRES_PASSWORD: pgbun_pass
    volumes:
      - pgbun_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pgbun_user -d pgbun_test"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pgbun_net

  pgbun:
    build:
      context: .
      dockerfile: Dockerfile.bun
    ports:
      - "6432:6432"
    environment:
      POOL_MODE: ${POOL_MODE:-session}
      SERVER_HOST: postgres
      SERVER_PORT: 5432
      MAX_CLIENT_CONN: ${MAX_CLIENT_CONN:-100}
      SERVER_CONNECT_TIMEOUT: ${SERVER_CONNECT_TIMEOUT:-15000}
      CLIENT_LOGIN_TIMEOUT: ${CLIENT_LOGIN_TIMEOUT:-60000}
      SERVER_IDLE_TIMEOUT: ${SERVER_IDLE_TIMEOUT:-600000}
      CLIENT_IDLE_TIMEOUT: ${CLIENT_IDLE_TIMEOUT:-0}
    volumes:
      - ./src:/app/src:rw
      - ./config:/app/config:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pgbun_net
    restart: unless-stopped

  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      PGHOST: pgbun
      PGPORT: 6432
      PGDATABASE: pgbun_test
      PGUSER: pgbun_user
      PGPASSWORD: pgbun_pass
    volumes:
      - ./tests:/tests:rw
      - ./metrics:/metrics:rw
    depends_on:
      - pgbun
    networks:
      - pgbun_net

volumes:
  pgbun_data:

networks:
  pgbun_net:
    driver: bridge